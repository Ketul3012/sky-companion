
stages:
  - test
  - build
  - deploy
  - lint
   
variables:
  MAVEN_CLI_OPTS: "--batch-mode"
  PNPM_VERSION: "7"
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

code_quality_react:
  stage: lint
  image: node:18-alpine3.18
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-${PNPM_VERSION} --activate
    - pnpm config set store-dir .pnpm-store
  script:
    - cd sky-companion-react
    - pnpm install --no-frozen-lockfile
    - pnpm run lint
  allow_failure: true
  cache:
    key:
      files:
        - sky-companion-react/pnpm-lock.yml
    paths:
      - sky-companion-react/node_modules/
    policy: pull  
  artifacts:
    reports:
      codequality: gl-code-quality-report-react.json
  only:
    - merge_requests    

code_quality_java:
  stage: lint
  image: openjdk:8-jdk
  script:
    - java -jar $CI_PROJECT_DIR/.gitlab/DesigniteJava.jar -i sky-companion-java -o $CI_PROJECT_DIR/smells
  allow_failure: true
  artifacts:
    paths:
      - "smells/"
  only:
    - merge_requests    
       
# Define test job for the backend (Spring Boot)
backend_test:
  stage: test
  image: maven:3.6.3-jdk-8
  cache:
    key: "$CI_COMMIT_REF_NAME-$CI_JOB_NAME"
    paths:
      - .m2/repository/
      - /var/lib/docker/image
      - /var/lib/docker/overlay2
  script:
    - echo "Testing backend code started"
    - cd sky-companion-java
    - mvn $MAVEN_CLI_OPTS test
    - echo "Testing backend code finished"
  artifacts:
    paths:
      - java/artifacts
  only:
    - merge_requests    

# Define build job for the backend (Spring Boot)
backend_build:
  stage: build
  image: maven:3.6.3-jdk-8
  cache:
    key: "$CI_COMMIT_REF_NAME-$CI_JOB_NAME"
    paths:
      - .m2/repository/
      - /var/lib/docker/image
      - /var/lib/docker/overlay2
  script:
    - echo "building backend code started"
    - cd sky-companion-java
    - mvn $MAVEN_CLI_OPTS clean package
    - echo "building backend code finished"
  artifacts:
    paths:
      - java/artifacts 
  only:
    - merge_requests       

# Define build job for frontend (react js)
frontend_build:
  stage: build
  image: node:18-alpine3.18
  cache:
    key: "${CI_COMMIT_REF_SLUG}-pnpm-${PNPM_VERSION}"
    paths:
      - .pnpm-store/
      - node_modules/
      - /var/lib/docker/image
      - /var/lib/docker/overlay2
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-${PNPM_VERSION} --activate
    - pnpm config set store-dir .pnpm-store
  script:
    - echo "building frontend code started"
    - cd sky-companion-react
    - pnpm install --no-frozen-lockfile
    - pnpm run build
    - echo "building frontend code finished"        
  artifacts:
    paths:
      - react/artifacts
  only:
    - merge_requests     

# Define deploy job
deploy:
  stage: deploy
  cache:
    key: "${CI_COMMIT_REF_SLUG}-build"
    paths:
      - /var/lib/docker/image
      - /var/lib/docker/overlay2
  before_script:
    - apt-get update
    - echo "Y" | apt-get -qq -y install curl
    - echo "Y" | apt-get install openssh-server 
    - 'command -v ssh-agent >/dev/null' 
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $VM_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $SSH_USER@$VM_IPADDRESS "sh deploy.sh"
  only:
    - main
    - uat
    - release
    - merge_requests  